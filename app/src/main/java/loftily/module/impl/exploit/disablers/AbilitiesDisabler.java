package loftily.module.impl.exploit.disablers;

import loftily.event.impl.world.UpdateEvent;
import loftily.module.impl.exploit.Disabler;
import loftily.utils.client.PacketUtils;
import loftily.value.impl.MultiBooleanValue;
import loftily.value.impl.mode.Mode;
import net.lenni0451.lambdaevents.EventHandler;
import net.minecraft.entity.player.PlayerCapabilities;
import net.minecraft.network.play.client.CPacketPlayerAbilities;

public class AbilitiesDisabler extends Mode<Disabler> {
    public AbilitiesDisabler() {
        super("Abilities");
    }

    private final MultiBooleanValue abilitiesMode = new MultiBooleanValue("Abilities-Mode")
            .add("CreativeFly",false)
            .add("FlyingPacket",false)
            .add("Packet1",false)
            .add("Packet2",false);

    @EventHandler
    public void onUpdate(UpdateEvent event) {
        abilitiesMode.getValue().forEach(
                (key, value) -> {
                    if(value){
                        switch(key){
                            case "CreativeFly":
                                mc.player.capabilities.isFlying = true;
                                break;
                            case "FlyingPacket":
                                PlayerCapabilities capabilities = mc.player.capabilities;
                                capabilities.isCreativeMode = false;
                                capabilities.isFlying = true;
                                capabilities.allowFlying = false;
                                capabilities.allowEdit = false;
                                PacketUtils.sendPacket(new CPacketPlayerAbilities(capabilities));
                                break;
                            case "Packet1":
                                PlayerCapabilities playerCapabilities = mc.player.capabilities;
                                playerCapabilities.allowFlying = true;
                                playerCapabilities.isFlying = true;
                                PacketUtils.sendPacket(new CPacketPlayerAbilities(playerCapabilities));
                                break;
                            case "Packet2":
                                mc.player.sendPlayerAbilities();
                                break;
                        }
                    }
                }
        );
    }
}
